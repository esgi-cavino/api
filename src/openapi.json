{
  "openapi": "3.0.1",
  "info": {
    "title": "ESGI-Cavino API",
    "description": "A simple API to learn how to write OpenAPI Specification",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://esgi-cavino-api.herokuapp.com/api/"
    },
    {
      "url": "http://localhost:8080/api/",
      "description": "Local testing"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Everything about Users"
    },
    {
      "name": "authentication",
      "description": "Everything about authentications"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Gets all users",
        "description": "Returns a list containing all users.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates a user",
        "description": "Creates a user with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A list of Person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
    "/user/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get one user",
        "description": "Returns the wanted user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "update one user",
        "description": "Returns the updated user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the user to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The modified user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "delete one user",
        "description": "delete a user by uuid.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/cellars/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all cellar of one user",
        "description": "Returns a list containing all cellars for one user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Cellar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new cellar for one user",
        "description": "Returns the new cellar.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "userUUID": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The new Cellar",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cellar"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/cellars/{uuid}/{id}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "delete one user cellar",
        "description": "delete a cellar by uuid and id.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cellar to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/favouriteWines/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all favourite Wines Type of one user",
        "description": "Returns a list containing all favouriteWines for one user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of FavouriteWines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "userUUID": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new favouriteWines for one user",
        "description": "Returns the new favouriteWines.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "regionId": {
                    "type": "integer"
                  },
                  "userUUID": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The new FavouriteWines",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavouriteWines"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/favouriteWines/{uuid}/{id}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "delete one user favouriteWines",
        "description": "delete a favouriteWines by uuid and id.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteWines to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Sing in",
        "description": "Returns the user UUID and the corresponding JWT.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user uuid and JWT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "sign up",
        "description": "Returns a JWT for the created user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The created user JWT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          },
          "address": {
            "type": "string"
          },
          "isSeller": {
            "type": "boolean",
            "default": false
          },
          "isAdmin": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Cellar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "userUUID": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "FavouriteWines": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "regionId": {
            "type": "integer"
          },
          "userUUID": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid",
        "content": {}
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "basic authentication"
      },
      "JWT-Admin": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "admin authentication"
      }
    }
  }
}