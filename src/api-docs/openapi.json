{
  "openapi": "3.0.1",
  "info": {
    "title": "ESGI-Cavino API ",
    "description": "Documentation with OpenAPI Specification",
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "https://esgi-cavino-api.herokuapp.com/api/",
      "description": "Production server ✔️"
    },
    {
      "url": "http://localhost:8080/api/",
      "description": "Local testing ❌"
    }
  ],
  "tags": [
    {
      "name": "authentication",
      "description": "Everything about authentications"
    },
    {
      "name": "user",
      "description": "Everything about Users"
    },
    {
      "name": "cellar",
      "description": "Everything about Cellars"
    },
    {
      "name": "bottle",
      "description": "Everything about Bottles"
    },
    {
      "name": "favouriteRegion",
      "description": "Everything about FavouriteRegions"
    },
    {
      "name": "favouriteWine",
      "description": "Everything about FavouriteWines"
    },
    {
      "name": "positionInCellar",
      "description": "Everything about PositionInCellars"
    },
    {
      "name": "region",
      "description": "Everything about Regions"
    },
    {
      "name": "wineType",
      "description": "Everything about WineTypes"
    },
    {
      "name": "domain",
      "description": "Everything about Domains"
    },
    {
      "name": "vintage",
      "description": "Everything about Vintages"
    },
    {
      "name": "country",
      "description": "Everything about Countrys"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Gets all users",
        "description": "Returns a list containing all users.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates a user",
        "description": "Creates a user with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstname",
                  "lastname",
                  "email",
                  "password"
                ],
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  },
                  "address": {
                    "type": "string"
                  },
                  "isSeller": {
                    "type": "boolean",
                    "default": false
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "A list of Person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
    "/sellers": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Gets all seller users",
        "description": "Returns a list containing all seller users.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/admins": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Gets all admin users",
        "description": "Returns a list containing all admin users.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
    "/user/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get one user",
        "description": "Returns the wanted user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "update one user",
        "description": "Returns the updated user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the user to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "delete one user",
        "description": "delete a user by uuid.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/cellars/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all cellar of one user",
        "description": "Returns a list containing all cellars for one user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Cellar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cellar"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/favouriteRegions/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all favouriteRegions of one user",
        "description": "Returns a list containing all favouriteRegions for one user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of FavouriteRegions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "userUUID": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/removeFavouriteRegion/{uuid}/{id}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "delete one user favouriteRegion",
        "description": "delete a favouriteRegion by uuid and id.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteRegion to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/favouriteWines/{uuid}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get all favouriteWines Type of one user",
        "description": "Returns a list containing all favouriteWines for one user.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the wanted user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of FavouriteWines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "userUUID": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/user/removeFavouriteWine/{uuid}/{id}": {
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "delete one user favouriteWine",
        "description": "delete a favouriteWine by uuid and id.",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "description": "The uuid of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteWine to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/signin": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Sing in",
        "description": "Returns the user UUID and the corresponding JWT.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The user uuid and JWT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "sign up",
        "description": "Returns a JWT for the created user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "firstname",
                  "lastname",
                  "email",
                  "password"
                ],
                "properties": {
                  "firstname": {
                    "type": "string"
                  },
                  "lastname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  },
                  "address": {
                    "type": "string"
                  },
                  "isSeller": {
                    "type": "boolean",
                    "default": false
                  },
                  "isAdmin": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The created user JWT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cellar": {
      "get": {
        "tags": [
          "cellar"
        ],
        "summary": "Gets all cellars",
        "description": "Returns a list containing all cellars.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Cellar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cellar"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      },
      "post": {
        "tags": [
          "cellar"
        ],
        "summary": "Creates a callar",
        "description": "Creates a cellar with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "width",
                  "height",
                  "userUUID"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "width": {
                    "type": "integer"
                  },
                  "height": {
                    "type": "integer"
                  },
                  "userUUID": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cellar created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cellar"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/cellar/{id}": {
      "get": {
        "tags": [
          "cellar"
        ],
        "summary": "Get one cellar",
        "description": "Returns the wanted cellar.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted cellar",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cellar"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "cellar"
        ],
        "summary": "update one cellar",
        "description": "Returns the updated cellar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cellar to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "width": {
                    "type": "integer"
                  },
                  "height": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "cellar"
        ],
        "summary": "delete one cellar",
        "description": "delete a cellar by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cellar to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
    "/cellar/{id}/{userUUID}": {
      "delete": {
        "tags": [
          "cellar"
        ],
        "summary": "delete one cellar",
        "description": "delete a cellar by id and userUUID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the cellar to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "userUUID",
            "in": "path",
            "description": "The userUUID of the cellar to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/positionInCellar": {
      "get": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "Gets all positionInCellars",
        "description": "Returns a list containing all positionInCellars.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of PositionInCellar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionInCellar"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      },
      "post": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "Creates a positionInCellar",
        "description": "Creates a positionInCellar with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "positionX",
                  "positionY",
                  "cellarId",
                  "bottleId"
                ],
                "properties": {
                  "positionX": {
                    "type": "integer"
                  },
                  "positionY": {
                    "type": "integer"
                  },
                  "cellarId": {
                    "type": "integer"
                  },
                  "bottleId": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "PositionyInCellar created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionInCellar"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/positionInCellar/byCellarId/{cellarId}": {
      "get": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "Gets all positionInCellars by cellarId",
        "description": "Returns a list containing all positionInCellars.",
        "parameters": [
          {
            "name": "cellarId",
            "in": "path",
            "description": "The id of the cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of PositionInCellar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionInCellar"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/positionInCellar/byCellarAndBottleId/{cellarId}/{bottleId}": {
      "get": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "Gets all positionInCellars by cellarId and bottleId",
        "description": "Returns a list containing all positionInCellars.",
        "parameters": [
          {
            "name": "cellarId",
            "in": "path",
            "description": "The id of the cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "bottleId",
            "in": "path",
            "description": "The id of the bottle",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of PositionInCellar",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PositionInCellar"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/positionInCellar/byCellarIdAndPosition/{cellarId}/{positionX}/{positionY}": {
      "get": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "Gets all positionInCellars by cellarId and position of the bottle in cellar",
        "description": "Returns the wanted positionInCellar.",
        "parameters": [
          {
            "name": "cellarId",
            "in": "path",
            "description": "The id of the cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "positionX",
            "in": "path",
            "description": "The positionX of the bottle in cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "positionY",
            "in": "path",
            "description": "The positionY of the bottle in cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted positionInCellar",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionInCellar"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "delete one positionInCellar by cellarId and position of the bottle in cellar",
        "description": "delete a positionInCellar by cellarId and position of the bottle in cellar.",
        "parameters": [
          {
            "name": "cellarId",
            "in": "path",
            "description": "The id of the cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "positionX",
            "in": "path",
            "description": "The positionX of the bottle in cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "positionY",
            "in": "path",
            "description": "The positionY of the bottle in cellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/positionInCellar/{id}": {
      "get": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "Get one positionInCellar",
        "description": "Returns the wanted positionInCellar.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted positionInCellar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted positionInCellar",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PositionInCellar"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "update one positionInCellar",
        "description": "Returns the updated positionInCellar",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the positionInCellar to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "positionX": {
                    "type": "integer"
                  },
                  "positionY": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "positionInCellar"
        ],
        "summary": "delete one positionInCellar",
        "description": "delete a positionInCellar by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the positionInCellar to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
    "/bottle": {
      "get": {
        "tags": [
          "bottle"
        ],
        "summary": "Gets all bottles",
        "description": "Returns a list containing all bottles.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Bottle",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Bottle"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "bottle"
        ],
        "summary": "Creates a bottle",
        "description": "Creates a bottle with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
				"required": [
                  "name",
                  "price"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "integer",
                    "format": "float"
                  },
                  "averagePrice": {
                    "type": "integer",
                    "format": "float"
                  },
                  "isOrganic": {
                    "type": "boolean",
                    "default": false
                  },
                  "wineTypeId": {
                    "type": "integer"
                  },
                  "regionId": {
                    "type": "integer"
                  },
                  "countryId": {
                    "type": "integer"
                  },
                  "domainId": {
                    "type": "integer"
                  },
                  "vintageId": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Bottle created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bottle"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/bottle/{id}": {
      "get": {
        "tags": [
          "bottle"
        ],
        "summary": "Get one bottle",
        "description": "Returns the wanted bottle.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted bottle",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted bottle",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Bottle"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "bottle"
        ],
        "summary": "update one bottle",
        "description": "Returns the updated bottle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the bottle to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "integer",
                    "format": "float"
                  },
                  "averagePrice": {
                    "type": "integer",
                    "format": "float"
                  },
                  "isOrganic": {
                    "type": "boolean",
                    "default": false
                  },
                  "wineTypeId": {
                    "type": "integer"
                  },
                  "regionId": {
                    "type": "integer"
                  },
                  "countryId": {
                    "type": "integer"
                  },
                  "domainId": {
                    "type": "integer"
                  },
                  "vintageId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "bottle"
        ],
        "summary": "delete one bottle",
        "description": "delete a bottle by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the bottle to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
    "/favouriteWine": {
      "get": {
        "tags": [
          "favouriteWine"
        ],
        "summary": "Gets all favouriteWines",
        "description": "Returns a list containing all favouriteWines.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of FavouriteWine",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavouriteWine"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "favouriteWine"
        ],
        "summary": "Creates a favouriteWine",
        "description": "Creates a favouriteWine with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userUUID",
                  "wineTypeId"
                ],
                "properties": {
                  "userUUID": {
                    "type": "string"
                  },
                  "wineTypeId": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "FavouriteWine created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavouriteWine"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/favouriteWine/{id}": {
      "get": {
        "tags": [
          "favouriteWine"
        ],
        "summary": "Get one favouriteWine",
        "description": "Returns the wanted favouriteWine.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted favouriteWine",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted favouriteWine",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavouriteWine"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "favouriteWine"
        ],
        "summary": "update one favouriteWine",
        "description": "Returns the updated favouriteWine",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteWine to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userUUID": {
                    "type": "string"
                  },
                  "wineTypeId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "favouriteWine"
        ],
        "summary": "delete one favouriteWine",
        "description": "delete a favouriteWine by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteWine to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
    "/favouriteWine/{id}/{userUUID}": {
      "delete": {
        "tags": [
          "favouriteWine"
        ],
        "summary": "delete one favouriteWine",
        "description": "delete a favouriteWine by id and userUUID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteWine to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "userUUID",
            "in": "path",
            "description": "The userUUID of the favouriteWine to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
	  "/favouriteRegion": {
      "get": {
        "tags": [
          "favouriteRegion"
        ],
        "summary": "Gets all favouriteRegions",
        "description": "Returns a list containing all favouriteRegions.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of FavouriteRegion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FavouriteRegion"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "favouriteRegion"
        ],
        "summary": "Creates a favouriteRegion",
        "description": "Creates a favouriteRegion with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userUUID",
                  "regionId"
                ],
                "properties": {
                  "userUUID": {
                    "type": "string"
                  },
                  "regionId": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "FavouriteRegion created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavouriteRegion"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/favouriteRegion/{id}": {
      "get": {
        "tags": [
          "favouriteRegion"
        ],
        "summary": "Get one favouriteRegion",
        "description": "Returns the wanted favouriteRegion.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted favouriteRegion",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted favouriteRegion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavouriteRegion"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "favouriteRegion"
        ],
        "summary": "update one favouriteRegion",
        "description": "Returns the updated favouriteRegion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteRegion to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userUUID": {
                    "type": "string"
                  },
                  "regionId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "favouriteRegion"
        ],
        "summary": "delete one favouriteRegion",
        "description": "delete a favouriteRegion by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteRegion to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
    "/favouriteRegion/{id}/{userUUID}": {
      "delete": {
        "tags": [
          "favouriteRegion"
        ],
        "summary": "delete one favouriteRegion",
        "description": "delete a favouriteRegion by id and userUUID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the favouriteRegion to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "userUUID",
            "in": "path",
            "description": "The userUUID of the favouriteRegion to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
	  "/region": {
      "get": {
        "tags": [
          "region"
        ],
        "summary": "Gets all regions",
        "description": "Returns a list containing all regions.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Region",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Region"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "region"
        ],
        "summary": "Creates a region",
        "description": "Creates a region with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Region created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/region/{id}": {
      "get": {
        "tags": [
          "region"
        ],
        "summary": "Get one region",
        "description": "Returns the wanted region.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted region",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted region",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Region"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "region"
        ],
        "summary": "update one region",
        "description": "Returns the updated region",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the region to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      },
      "delete": {
        "tags": [
          "region"
        ],
        "summary": "delete one region",
        "description": "delete a region by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the region to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
	"/wineType": {
      "get": {
        "tags": [
          "wineType"
        ],
        "summary": "Gets all wineTypes",
        "description": "Returns a list containing all wineTypes.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of WineType",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WineType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "wineType"
        ],
        "summary": "Creates a wineType",
        "description": "Creates a wineType with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "WineType created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WineType"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/wineType/{id}": {
      "get": {
        "tags": [
          "wineType"
        ],
        "summary": "Get one wineType",
        "description": "Returns the wanted wineType.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted wineType",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted wineType",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WineType"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "wineType"
        ],
        "summary": "update one wineType",
        "description": "Returns the updated wineType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wineType to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      },
      "delete": {
        "tags": [
          "wineType"
        ],
        "summary": "delete one wineType",
        "description": "delete a wineType by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wineType to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
	"/domain": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Gets all domains",
        "description": "Returns a list containing all domains.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Domain",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Domain"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "domain"
        ],
        "summary": "Creates a domain",
        "description": "Creates a domain with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "domain created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/domain/{id}": {
      "get": {
        "tags": [
          "domain"
        ],
        "summary": "Get one domain",
        "description": "Returns the wanted domain.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted domain",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted domain",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Domain"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "domain"
        ],
        "summary": "update one domain",
        "description": "Returns the updated domain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the domain to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      },
      "delete": {
        "tags": [
          "domain"
        ],
        "summary": "delete one domain",
        "description": "delete a domain by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the domain to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
	"/vintage": {
      "get": {
        "tags": [
          "vintage"
        ],
        "summary": "Gets all vintages",
        "description": "Returns a list containing all vintages.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Vintage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vintage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "vintage"
        ],
        "summary": "Creates a vintage",
        "description": "Creates a vintage with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "year"
                ],
                "properties": {
                  "year": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "vintage created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vintage"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/vintage/{id}": {
      "get": {
        "tags": [
          "vintage"
        ],
        "summary": "Get one vintage",
        "description": "Returns the wanted vintage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted vintage",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted vintage",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vintage"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "vintage"
        ],
        "summary": "update one vintage",
        "description": "Returns the updated vintage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the vintage to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "year": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      },
      "delete": {
        "tags": [
          "vintage"
        ],
        "summary": "delete one vintage",
        "description": "delete a vintage by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the vintage to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    },
	"/country": {
      "get": {
        "tags": [
          "country"
        ],
        "summary": "Gets all countrys",
        "description": "Returns a list containing all countrys.",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The number of items to skip before starting to collect the result set",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The numbers of items to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of country",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "country"
        ],
        "summary": "Creates a country",
        "description": "Creates a country with request body parameters.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "country created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/country/{id}": {
      "get": {
        "tags": [
          "country"
        ],
        "summary": "Get one country",
        "description": "Returns the wanted country.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the wanted country",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The wanted country",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "patch": {
        "tags": [
          "country"
        ],
        "summary": "update one country",
        "description": "Returns the updated country",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the country to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The number of modified objects"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      },
      "delete": {
        "tags": [
          "country"
        ],
        "summary": "delete one country",
        "description": "delete a country by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the country to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request response"
          },
          "401": {
            "description": "Access token is missing or invalid",
            "content": {}
          }
        },
        "security": [
          {
            "JWT-Admin": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          },
          "adress": {
            "type": "string"
          },
          "isSeller": {
            "type": "boolean",
            "default": false
          },
          "isAdmin": {
            "type": "boolean",
            "default": false
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Cellar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          },
          "userUUID": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "FavouriteRegion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "regionId": {
            "type": "integer"
          },
          "userUUID": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "FavouriteWine": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "wineTypeId": {
            "type": "integer"
          },
          "userUUID": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "PositionInCellar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "positionX": {
            "type": "integer"
          },
          "positionY": {
            "type": "integer"
          },
          "cellarId": {
            "type": "integer"
          },
          "bottleId": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Bottle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "integer",
            "format": "float"
          },
          "averagePrice": {
            "type": "integer",
            "format": "float"
          },
          "isOrganic": {
            "type": "boolean",
            "default": false
          },
          "wineType": {
            "type": "object",
            "properties": {
              "name":{
                "type": "string"
              }
            }
          },
          "region": {
            "type": "object",
            "properties": {
              "name":{
                "type": "string"
              }
            }
          },
          "country": {
            "type": "object",
            "properties": {
              "name":{
                "type": "string"
              }
            }
          },
          "domain": {
            "type": "object",
            "properties": {
              "name":{
                "type": "string"
              }
            }
          },
          "vintage": {
            "type": "object",
            "properties": {
              "year":{
                "type": "integer"
              }
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
		}
      },
      "Region": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "WineType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Domain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Vintage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "year": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid",
        "content": {}
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "basic authentication"
      },
      "JWT-Admin": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "admin authentication"
      }
    }
  }
}